using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleGame_ATB
{

    internal class Map
    {
        const char CIRCLE = '\u25cf';
        const char SQURE_B = '\u25fb';
        const char SQURE = '\u25fc';

        int SizeX { get; set; }
        int SizeY { get; set; }
        public int SizeMenu { get; private set; }

        public void Initialize(int Xsize, int Ysize, int mSize)
        {
            SizeX = Xsize;
            SizeY = Ysize;
            SizeMenu = mSize;
        }
        public bool RigidCheck(Player player, Player.Move mv)
        {
            switch (mv)
            {
                case Player.Move.Left:
                    return PisicChk(map1[player.Positions[0].Y][player.Positions[0].X - 1]);
                case Player.Move.Right:
                    return PisicChk(map1[player.Positions[0].Y][player.Positions[0].X + 1]);
                case Player.Move.Up:
                    return PisicChk(map1[player.Positions[0].Y-1][player.Positions[0].X]);
                case Player.Move.Down:
                    return PisicChk(map1[player.Positions[0].Y+1][player.Positions[0].X]);
                default:
                    return false;
            }
        }
        private bool PisicChk(char a)
        {
            if(a == '■' || a == '☆')
                return false;
            else
                return true;
        }


        // list를 arr로 변경하고 char 비교하는게 빠를꺼 같나?
        // 상수값 받아올 방법 생각하기
        public List<string> map1 = new List<string>
        {
            { "■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■" },
            { "■□□□□□□□□□□□□□□□□□□□□▨▨▨□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□▨■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□▨■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□▨■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■" }
        };
        public List<string> map2 = new List<string>
        {
            { "■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■" },
            { "■□□□□□□□□□□□□□□□□□□□□▨▨▨□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■▨□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■" },
            { "■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■" }
        };

        //NPC도 뭉탱이로 들고 와야 함.
        public void Render(List<List<Pos>> pPoint, Menu menu, TextBoxInterface textBox)
        {
            //현재 구문으로는 값이 늘어나버림
            for (int y = 0; y < SizeY; y++)
            {
                for (int x = 0; x < SizeX; x++)
                {
                    if(pPoint[1][0].Y == y && pPoint[1][0].X == x)
                    {
                        Console.ForegroundColor = ConsoleColor.Yellow;
                        Console.Write("☆");
                    }
                    else if (pPoint[0][0].Y == y && pPoint[0][0].X == x)    //pPoint[0] = Player
                    {
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.Write(CIRCLE);
                    }
                    else if (x == 0 || x == SizeX - 1 || y == 0 || y == SizeY - 1)
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.Write(map1[y][x]);
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.DarkGray;
                        Console.Write(map1[y][x]);
                    }
                    /*Console.Write(map1[x]);*/
                }
                // 메뉴 들어가야할 자리.
                // 메뉴 구현

                Console.ForegroundColor = ConsoleColor.Blue;
                menu.PrintMenu(y);

                Console.WriteLine();
            }
            Console.ForegroundColor = ConsoleColor.DarkGray;
            Console.WriteLine();

            textBox.PrintTextBox(); //값을 넣어서 해결 하자.
        }


    }


}
